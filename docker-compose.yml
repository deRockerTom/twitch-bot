services:
  mongodb:
    image: "mongo:${MONGO_VERSION:-latest}"
    container_name: twitch-bot-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
      - ./mongo-scripts:/mongo-scripts
    command: ["bash", "/mongo-scripts/startup.sh"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 3s

  bot:
    build:
      context: .
      dockerfile: Dockerfile.python
      args:
        PACKAGE: "bot"
    container_name: twitch-bot
    restart: always
    depends_on:
      - mongodb
    environment:
      - MONGO__HOST=mongodb
      - MONGO__PORT=27017
      - MONGO__DB=twitch-bot
      - USE_HTTPS=True
    env_file:
      - bot/.env
    command: ["uv", "run", "bot/src/main.py"]

  nginx-bot:
    image: nginx:latest
    container_name: twitch-nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    ports:
      - "4343:4343"  # HTTPS port
    depends_on:
      - bot

  websockets-server:
    build:
      context: .
      dockerfile: Dockerfile.python
      args:
        PACKAGE: "websockets_server"
    container_name: twitch-websockets-server
    restart: always
    depends_on:
      - mongodb
    environment:
      - MONGO__HOST=mongodb
      - MONGO__PORT=27017
      - MONGO__DB=twitch-bot
    ports:
      - "8081:8081"
    command: ["uv", "run", "websockets_server/src/main.py"]
